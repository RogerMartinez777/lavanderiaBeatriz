// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Lavanderia_Beatriz_App.Models;

public partial class LavanderiaContext : DbContext
{
    public LavanderiaContext(DbContextOptions<LavanderiaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Acolchado> Acolchados { get; set; }

    public virtual DbSet<Cliente> Clientes { get; set; }

    public virtual DbSet<EncargadosRecep> EncargadosReceps { get; set; }

    public virtual DbSet<Tamanio> Tamanios { get; set; }

    public virtual DbSet<TiposCobro> TiposCobros { get; set; }

    public virtual DbSet<TiposPuesto> TiposPuestos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Acolchado>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.IdTamanio).HasColumnName("id_tamanio");
            entity.Property(e => e.PrecioUnitario)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precio_unitario");

            entity.HasOne(d => d.IdTamanioNavigation).WithMany(p => p.Acolchados)
                .HasForeignKey(d => d.IdTamanio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acolchados_Tamanios");
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Apellido)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.Mail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mail");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Telefono)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("telefono");
        });

        modelBuilder.Entity<EncargadosRecep>(entity =>
        {
            entity.ToTable("Encargados_Recep");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Alias)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("alias");
            entity.Property(e => e.Apellido)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.Estado)
                .HasDefaultValue(true)
                .HasColumnName("estado");
            entity.Property(e => e.FechaNacimiento).HasColumnName("fecha_nacimiento");
            entity.Property(e => e.IdPuesto).HasColumnName("id_Puesto");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdPuestoNavigation).WithMany(p => p.EncargadosReceps)
                .HasForeignKey(d => d.IdPuesto)
                .HasConstraintName("FK_Encargados_Recep_Tipos_Puesto");
        });

        modelBuilder.Entity<Tamanio>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Tamaños__3213E83FF0480DA0");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        modelBuilder.Entity<TiposCobro>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Tipos_Pago");

            entity.ToTable("Tipos_Cobro");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        modelBuilder.Entity<TiposPuesto>(entity =>
        {
            entity.ToTable("Tipos_Puesto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}